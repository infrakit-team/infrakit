name: Publish Module KV Packages

on:
  push:
    tags:
      - kv-v*

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Set package version from tag
        run: |
          TAG_NAME="${GITHUB_REF_NAME}"
          VERSION="${TAG_NAME#kv-v}"
          if [ -z "$VERSION" ] || [ "$VERSION" = "$TAG_NAME" ]; then
            echo "Tag '$TAG_NAME' does not follow the expected 'kv-v*' pattern."
            exit 1
          fi
          export VERSION
          for pkg in app/modules/kv/core app/modules/kv/adapter-memory; do
            if [ ! -f "$pkg/package.json" ]; then
              echo "Skipping missing package: $pkg"
              continue
            fi
            echo "Setting version for $pkg"
            PACKAGE_PATH="$pkg/package.json" bun --eval "const fs = require('fs'); const path = process.env.PACKAGE_PATH; const version = process.env.VERSION; const pkg = JSON.parse(fs.readFileSync(path, 'utf8')); pkg.version = version; fs.writeFileSync(path, JSON.stringify(pkg, null, '\t') + '\n');"
          done

      - name: Publish packages to npm
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          for pkg in app/modules/kv/core app/modules/kv/adapter-memory; do
            if [ -f "$pkg/package.json" ]; then
              echo "Publishing $pkg"
              (cd "$pkg" && bun publish --access public)
            fi
          done
