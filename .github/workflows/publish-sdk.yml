name: Publish SDK Package
on:
  push:
    tags:
      - sdk-v*

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: https://registry.npmjs.org
          
      - name: Install dependencies
        run: bun install
        
      - name: Set package version and publish
        uses: actions/github-script@v8
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Extract version from tag
            const tagName = context.ref.replace('refs/tags/', '');
            const version = tagName.replace('sdk-v', '');
            
            if (!version || version === tagName) {
              core.setFailed(`Tag '${tagName}' does not follow the expected 'sdk-v*' pattern.`);
              return;
            }
            
            core.info(`Publishing SDK version: ${version}`);
            
            const pkgPath = path.join(process.cwd(), 'app/sdk/package.json');
            
            // Update package version
            core.info('Setting package version');
            const pkgJson = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
            pkgJson.version = version;
            fs.writeFileSync(pkgPath, JSON.stringify(pkgJson, null, '\t') + '\n');
            
            // Build if build script exists
            if (pkgJson.scripts && pkgJson.scripts.build) {
              core.info('Building package');
              await exec.exec('bun', ['run', 'build'], {
                cwd: 'app/sdk'
              });
            }
            
            // Publish to npm
            core.info('Publishing to npm');
            await exec.exec('npm', ['publish', '--access', 'public'], {
              cwd: 'app/sdk'
            });
